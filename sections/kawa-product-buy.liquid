{{ 'kawa-product-buy.css' | asset_url | stylesheet_tag }}

<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

<div class="kawa-product-buy">
  <div class="product-subtitle">
    {{ product.metafields.descriptors.subtitle }}
  </div>
  <div class="purchase-box">
    <product-form>
      {%- form 'product', product, id: 'product-purchase-form', class: 'product-buy-form' -%}
        <button
          type="submit"
          class="add-to-cart__btn"
          {% if product.selected_or_first_available_variant.available == false %}
            disabled
          {% endif %}
        >
          <span>
            {%- if product.selected_or_first_available_variant.available -%}
              ADD TO CART
            {%- else -%}
              SOLD OUT
            {%- endif -%}
          </span>
          <div class="loading-overlay__spinner hidden">
            <svg
              aria-hidden="true"
              focusable="false"
              role="presentation"
              class="spinner"
              viewBox="0 0 66 66"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
            </svg>
          </div>
        </button>
        {{ form | payment_button }}
      {%- endform -%}
    </product-form>
  </div>
</div>

<script type="text/javascript">
  const productBuy = document.querySelector('.kawa-product-buy');
  const productMain = document.querySelector('.product-page-main');
  const screenW = window.screen.width;
  if (screenW <= 768) {
    const observer = new IntersectionObserver(
      (entries) => {
        for (const entry of entries) {
          if (entry.intersectionRatio >= 0.5) {
            productBuy.style.display = 'none';
          } else if (entry.intersectionRatio === 0) {
            productBuy.style.display = 'flex';
          }
        }
      },
      {
        threshold: [0, 0.5],
      }
    );
    observer.observe(productMain);
  } else {
    const observer = new IntersectionObserver(
      (entries) => {
        for (const entry of entries) {
          if (entry.intersectionRatio >= 0.75) {
            productBuy.style.display = 'none';
          } else if (entry.intersectionRatio === 0) {
            productBuy.style.display = 'flex';
          }
        }
      },
      {
        threshold: [0, 0.75],
      }
    );
    observer.observe(productMain);
  }
</script>
